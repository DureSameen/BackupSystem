//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BackupSystem.WinApp.BackupSystemService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="wcfScheduleDetails", Namespace="http://schemas.datacontract.org/2004/07/BackupSystem.WebService.Data")]
    [System.SerializableAttribute()]
    public partial class wcfScheduleDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BackupSystem.WinApp.BackupSystemService.EnumsBackupType BackupTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long Schedule_Detail_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourcePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceUser_DomainNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceUser_PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetUser_DomainNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetUser_PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BackupSystem.WinApp.BackupSystemService.EnumsBackupType BackupType {
            get {
                return this.BackupTypeField;
            }
            set {
                if ((this.BackupTypeField.Equals(value) != true)) {
                    this.BackupTypeField = value;
                    this.RaisePropertyChanged("BackupType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Schedule_Detail_Id {
            get {
                return this.Schedule_Detail_IdField;
            }
            set {
                if ((this.Schedule_Detail_IdField.Equals(value) != true)) {
                    this.Schedule_Detail_IdField = value;
                    this.RaisePropertyChanged("Schedule_Detail_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourcePath {
            get {
                return this.SourcePathField;
            }
            set {
                if ((object.ReferenceEquals(this.SourcePathField, value) != true)) {
                    this.SourcePathField = value;
                    this.RaisePropertyChanged("SourcePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceUserId {
            get {
                return this.SourceUserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceUserIdField, value) != true)) {
                    this.SourceUserIdField = value;
                    this.RaisePropertyChanged("SourceUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceUser_DomainName {
            get {
                return this.SourceUser_DomainNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceUser_DomainNameField, value) != true)) {
                    this.SourceUser_DomainNameField = value;
                    this.RaisePropertyChanged("SourceUser_DomainName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceUser_Password {
            get {
                return this.SourceUser_PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceUser_PasswordField, value) != true)) {
                    this.SourceUser_PasswordField = value;
                    this.RaisePropertyChanged("SourceUser_Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetPath {
            get {
                return this.TargetPathField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetPathField, value) != true)) {
                    this.TargetPathField = value;
                    this.RaisePropertyChanged("TargetPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetUserId {
            get {
                return this.TargetUserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetUserIdField, value) != true)) {
                    this.TargetUserIdField = value;
                    this.RaisePropertyChanged("TargetUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetUser_DomainName {
            get {
                return this.TargetUser_DomainNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetUser_DomainNameField, value) != true)) {
                    this.TargetUser_DomainNameField = value;
                    this.RaisePropertyChanged("TargetUser_DomainName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetUser_Password {
            get {
                return this.TargetUser_PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetUser_PasswordField, value) != true)) {
                    this.TargetUser_PasswordField = value;
                    this.RaisePropertyChanged("TargetUser_Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Enums.BackupType", Namespace="http://schemas.datacontract.org/2004/07/BackupSystem.WebService.Data")]
    public enum EnumsBackupType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoType = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Simple_Folder_Copy = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Incremental_Backup = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Enums.Status", Namespace="http://schemas.datacontract.org/2004/07/BackupSystem.WebService.Data")]
    public enum EnumsStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoStatus = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Done = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BackupSystemService.IBackupManager")]
    public interface IBackupManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBackupManager/CreateScheduleDetails", ReplyAction="http://tempuri.org/IBackupManager/CreateScheduleDetailsResponse")]
        void CreateScheduleDetails(string IP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBackupManager/CreateScheduleDetails", ReplyAction="http://tempuri.org/IBackupManager/CreateScheduleDetailsResponse")]
        System.Threading.Tasks.Task CreateScheduleDetailsAsync(string IP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBackupManager/GetScheduleDetails", ReplyAction="http://tempuri.org/IBackupManager/GetScheduleDetailsResponse")]
        BackupSystem.WinApp.BackupSystemService.wcfScheduleDetails[] GetScheduleDetails(string IP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBackupManager/GetScheduleDetails", ReplyAction="http://tempuri.org/IBackupManager/GetScheduleDetailsResponse")]
        System.Threading.Tasks.Task<BackupSystem.WinApp.BackupSystemService.wcfScheduleDetails[]> GetScheduleDetailsAsync(string IP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBackupManager/Update_ScheduleDetailStatus", ReplyAction="http://tempuri.org/IBackupManager/Update_ScheduleDetailStatusResponse")]
        void Update_ScheduleDetailStatus(long ScheduleDetailId, BackupSystem.WinApp.BackupSystemService.EnumsStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBackupManager/Update_ScheduleDetailStatus", ReplyAction="http://tempuri.org/IBackupManager/Update_ScheduleDetailStatusResponse")]
        System.Threading.Tasks.Task Update_ScheduleDetailStatusAsync(long ScheduleDetailId, BackupSystem.WinApp.BackupSystemService.EnumsStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBackupManager/GetWorkStationByIp", ReplyAction="http://tempuri.org/IBackupManager/GetWorkStationByIpResponse")]
        bool GetWorkStationByIp(string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBackupManager/GetWorkStationByIp", ReplyAction="http://tempuri.org/IBackupManager/GetWorkStationByIpResponse")]
        System.Threading.Tasks.Task<bool> GetWorkStationByIpAsync(string ip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBackupManager/AddWorkStation", ReplyAction="http://tempuri.org/IBackupManager/AddWorkStationResponse")]
        void AddWorkStation(string IP, string computername);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBackupManager/AddWorkStation", ReplyAction="http://tempuri.org/IBackupManager/AddWorkStationResponse")]
        System.Threading.Tasks.Task AddWorkStationAsync(string IP, string computername);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBackupManagerChannel : BackupSystem.WinApp.BackupSystemService.IBackupManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BackupManagerClient : System.ServiceModel.ClientBase<BackupSystem.WinApp.BackupSystemService.IBackupManager>, BackupSystem.WinApp.BackupSystemService.IBackupManager {
        
        public BackupManagerClient() {
        }
        
        public BackupManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BackupManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BackupManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BackupManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateScheduleDetails(string IP) {
            base.Channel.CreateScheduleDetails(IP);
        }
        
        public System.Threading.Tasks.Task CreateScheduleDetailsAsync(string IP) {
            return base.Channel.CreateScheduleDetailsAsync(IP);
        }
        
        public BackupSystem.WinApp.BackupSystemService.wcfScheduleDetails[] GetScheduleDetails(string IP) {
            return base.Channel.GetScheduleDetails(IP);
        }
        
        public System.Threading.Tasks.Task<BackupSystem.WinApp.BackupSystemService.wcfScheduleDetails[]> GetScheduleDetailsAsync(string IP) {
            return base.Channel.GetScheduleDetailsAsync(IP);
        }
        
        public void Update_ScheduleDetailStatus(long ScheduleDetailId, BackupSystem.WinApp.BackupSystemService.EnumsStatus status) {
            base.Channel.Update_ScheduleDetailStatus(ScheduleDetailId, status);
        }
        
        public System.Threading.Tasks.Task Update_ScheduleDetailStatusAsync(long ScheduleDetailId, BackupSystem.WinApp.BackupSystemService.EnumsStatus status) {
            return base.Channel.Update_ScheduleDetailStatusAsync(ScheduleDetailId, status);
        }
        
        public bool GetWorkStationByIp(string ip) {
            return base.Channel.GetWorkStationByIp(ip);
        }
        
        public System.Threading.Tasks.Task<bool> GetWorkStationByIpAsync(string ip) {
            return base.Channel.GetWorkStationByIpAsync(ip);
        }
        
        public void AddWorkStation(string IP, string computername) {
            base.Channel.AddWorkStation(IP, computername);
        }
        
        public System.Threading.Tasks.Task AddWorkStationAsync(string IP, string computername) {
            return base.Channel.AddWorkStationAsync(IP, computername);
        }
    }
}
