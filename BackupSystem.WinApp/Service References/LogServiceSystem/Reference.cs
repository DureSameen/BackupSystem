//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BackupSystem.WinApp.LogServiceSystem {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Enums.EventlogType", Namespace="http://schemas.datacontract.org/2004/07/BackupSystem.WebService.Data")]
    public enum EnumsEventlogType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoType = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Backup_Process_Begin = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Backup_Process_Ended = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LogServiceSystem.ILoggerService")]
    public interface ILoggerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoggerService/Add", ReplyAction="http://tempuri.org/ILoggerService/AddResponse")]
        void Add(string description, long Schedule_DetailId, BackupSystem.WinApp.LogServiceSystem.EnumsEventlogType eventlogtype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoggerService/Add", ReplyAction="http://tempuri.org/ILoggerService/AddResponse")]
        System.Threading.Tasks.Task AddAsync(string description, long Schedule_DetailId, BackupSystem.WinApp.LogServiceSystem.EnumsEventlogType eventlogtype);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoggerServiceChannel : BackupSystem.WinApp.LogServiceSystem.ILoggerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoggerServiceClient : System.ServiceModel.ClientBase<BackupSystem.WinApp.LogServiceSystem.ILoggerService>, BackupSystem.WinApp.LogServiceSystem.ILoggerService {
        
        public LoggerServiceClient() {
        }
        
        public LoggerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoggerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoggerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoggerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Add(string description, long Schedule_DetailId, BackupSystem.WinApp.LogServiceSystem.EnumsEventlogType eventlogtype) {
            base.Channel.Add(description, Schedule_DetailId, eventlogtype);
        }
        
        public System.Threading.Tasks.Task AddAsync(string description, long Schedule_DetailId, BackupSystem.WinApp.LogServiceSystem.EnumsEventlogType eventlogtype) {
            return base.Channel.AddAsync(description, Schedule_DetailId, eventlogtype);
        }
    }
}
